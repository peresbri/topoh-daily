{"ast":null,"code":"var _jsxFileName = \"/Users/bmm/dev/topoh-daily/src/SubscribeForm.tsx\";\nimport React from \"react\";\nimport { Input, Button } from \"antd\";\n\nfunction makeState(state) {\n  if (!!state) {\n    return { ...state\n    };\n  }\n\n  return {\n    name: \"\",\n    email: \"\"\n  };\n}\n\nexport class SubscribeForm extends React.Component {\n  constructor(props, state) {\n    super(props);\n    this.props = props;\n    this.state = state;\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (Object.keys(this.state).includes(name)) {\n        const updatedState = Object.assign({}, this.state, {\n          [name]: value\n        });\n        this.setState(updatedState);\n      }\n    };\n\n    this.handleSubscribe = () => {\n      const {\n        name,\n        email\n      } = this.state; // TODO validation BMM\n\n      const errors = Object.keys(this.state).reduce((acc, key) => {\n        // @ts-ignore\n        if (this.state[key]) {\n          acc = [...acc, {\n            'field': key,\n            'error': `error with the ${key} field`\n          }];\n        }\n\n        return acc;\n      }, []);\n\n      if (!!errors) {\n        alert(`errors while subscribing: ${errors}`);\n        return;\n      }\n\n      alert(`subscribing: ${name} ${email}`);\n    };\n\n    this.state = makeState();\n  }\n\n  render() {\n    const {\n      name,\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Enter your email to get daily \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, \"topoh\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"name\",\n      size: \"large\",\n      onChange: this.handleInputChange,\n      value: name,\n      placeholder: \"Joe Doe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      size: \"large\",\n      onChange: this.handleInputChange,\n      value: email,\n      placeholder: \"tina@topoh.cm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      block: true,\n      type: \"primary\",\n      onClick: this.handleSubscribe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Subscribe\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/bmm/dev/topoh-daily/src/SubscribeForm.tsx"],"names":["React","Input","Button","makeState","state","name","email","SubscribeForm","Component","constructor","props","handleInputChange","event","value","target","Object","keys","includes","updatedState","assign","setState","handleSubscribe","errors","reduce","acc","key","alert","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Input, Button } from \"antd\";\n\ninterface IProps {}\n\ninterface IState {\n  name: string;\n  email: string;\n}\n\nfunction makeState(state?: IState): IState {\n  if (!!state) {\n    return { ...state };\n  }\n\n  return {\n    name: \"\",\n    email: \"\",\n  };\n}\n\nexport class SubscribeForm extends React.Component<IProps, IState> {\n  constructor(public props: IProps, public state: IState) {\n    super(props);\n    this.state = makeState();\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (Object.keys(this.state).includes(name)) {\n      const updatedState = Object.assign({}, this.state, {\n        [name]: value,\n      });\n      this.setState(updatedState);\n    }\n  };\n\n  handleSubscribe = () => {\n    const { name, email } = this.state;\n\n    // TODO validation BMM\n    const errors = Object.keys(this.state).reduce((acc: any, key: string) => {\n      // @ts-ignore\n      if (this.state[key]) {\n        acc = [...acc, {'field': key, 'error': `error with the ${key} field`}];\n      }\n\n      return acc;\n    }, [])\n\n\n    if (!!errors) {\n      alert(`errors while subscribing: ${errors}`);\n      return;\n    }\n    \n    alert(`subscribing: ${name} ${email}`);\n  };\n\n  render() {\n    const { name, email } = this.state;\n\n    return (\n      <div>\n        <p>\n          Enter your email to get daily <span>topoh</span>\n        </p>\n        <Input\n          name=\"name\"\n          size=\"large\"\n          onChange={this.handleInputChange}\n          value={name}\n          placeholder=\"Joe Doe\"\n        />\n        <Input\n          name=\"email\"\n          size=\"large\"\n          onChange={this.handleInputChange}\n          value={email}\n          placeholder=\"tina@topoh.cm\"\n        />\n        <Button\n          size=\"large\"\n          block={true}\n          type=\"primary\"\n          onClick={this.handleSubscribe}\n        >\n          Subscribe\n        </Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}